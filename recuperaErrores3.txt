
# Errores varios en una declaración

int x = (x+++y)

# Error sin timpo a recuperarse del anterior
%++ 6;
if(x>3){
	hola.adios = 3;
}
else{
	adios.hola 4+5;
	for(int i 0; i == 3; i + 3*2){
		x = x+3;
	}
}
pepe = new (3+4);

for(int x= 2; x < 10; i+1){}
x.casa[3] = 2.8;

x = 3+2-4 + castillo(torre, 3+2-false*true+cara[3]);
call casa (3, 2, 4+5, hola, 3 div 0);

int x;
vector<vector<int>> hola = creaVector(creaVector(3, 4), 5);
enum meses = {enero | diciembre | julio};
fun int suma(int x, bool & y, vector<int> casa){
	if(y == true){
		x = y;
	}
	x.adios = 3.8;
	int a = x;
	return a;
}
proc resta(int & hola){
	x = 2;
}

struct hola{
	int x = 0;
	bool adios;
}
typedef vector<vector<int>> matriz;
fun matriz multiplica (matriz A, matriz B, int tam) {
	matriz C = creaVector(creaVector(0, m), m);
	int i = 0;
	while (i < tam){
		int j = 0;
		while (j < tam){
			int k = 0;
			while (k < tam){
				C[i][j].hola.adios[3+5-1] = C[i][j] + A[i][k]*B[k][j];
				k = k + 1;
				int a = casa3.hola && false || true[3]; 
			}
			j = j + 1;
		}
		i = i+1;
		switch (a){
			case 1:
				x = hola+1;
				y[3] = 'a' < 'b';
				break;
			case 2:
				x = 2+1*3+ array[hola.nombre];
				break;
			default:
				call adios();
		}
		for(int i = 0; i < 33+2-array[7]; 2-3+i){
			hola = creaVector(1,0);
		}
	}
	return C;
}
int x = -2 +3;

<int>* pepe = juan;

# Error los new solo se pueden hacer en la declaración
pepe = new int(3+4);